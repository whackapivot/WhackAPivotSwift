import Foundation
import CBGPromise

// this file was generated by Xcode-Better-Refactor-Tools
// https://github.com/tjarratt/xcode-better-refactor-tools

@testable import WhackAPivotSwift

class FakePeopleService : PeopleService, Equatable {
    init() {
    }
    
    private(set) var getPeopleCallCount : Int = 0
    var getPeopleStub : (() -> (Promise<[Person]?, NSError>))?
    func getPeopleReturns(stubbedValues: (Promise<[Person]?, NSError>)) {
        self.getPeopleStub = {() -> (Promise<[Person]?, NSError>) in
            return stubbedValues
        }
    }
    func getPeople() -> (Promise<[Person]?, NSError>) {
        self.getPeopleCallCount += 1
        return self.getPeopleStub!()
    }
    
    static func reset() {
    }
}

func == (a: FakePeopleService, b: FakePeopleService) -> Bool {
    return a === b
}