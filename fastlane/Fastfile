# Customise this file, documentation can be found here: https://github.com/fastlane/fastlane/tree/master/docs
# All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md, can also be listed using the `fastlane actions` command

# Keep this synced with version available on CI
fastlane_version "1.32.0"

default_platform :ios

platform :ios do
  before_all do
    # ensure_git_status_clean
  end

  desc "Continuous integration"
  lane :ci do
    specs
    acceptance
  end

  desc "Runs all the tests"
  lane :specs do
    scan(scheme: 'WhackAPivotSwift', device: 'iPhone 6 (9.3)', output_style: 'rspec')
  end

  desc "Submit a new Build to Apple TestFlight"
  lane :acceptance do
    keychain_name = "CI-Keychain"

    create_keychain(
      name: keychain_name,
      default_keychain: true,
      unlock: true,
      timeout: 3600,
      lock_when_sleeps: true,
      password: SecureRandom.base64
    )

    import_certificate(
      certificate_path: "fastlane/SigningIdentities/DistributionSigningIdentity.p12",
      certificate_password: ENV["KEY_PASSWORD"],
      keychain_name: keychain_name
    )

    # The development certificate is required even if you do not reference it in your XCode configuration
    import_certificate(
      certificate_path: "fastlane/SigningIdentities/DevelopmentSigningIdentity.p12",
      certificate_password: ENV["KEY_PASSWORD"],
      keychain_name: keychain_name
    )

    sigh(
      adhoc: true,
      username: "palfvin@gmail.com",
      team_id: "22XZS247UC",
      provisioning_name: "iPhoneAdHocProfile",
      cert_id: "22XZS247UC"
    )

    increment_build_number

    gym(
      scheme: 'WhackAPivotSwift',
      workspace: 'WhackAPivotSwift.xcworkspace',
      output_name: 'WhackAPivotSwift.ipa'
    )

    pilot(
      skip_submission: true
    )

    commit_version_bump(message: "Auto update build number to: #{get_build_number}\n[ci-skip]")
    push_to_git_remote(remote_branch: 'master')
  end

  desc "Deploy a new version to the App Store"
  lane :appstore do
    # match(type: "appstore")
    # snapshot
    # gym(scheme: 'WhackAPivotSwift') # Build your app - more options available
    # deliver(force: true)
    # frameit
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful
    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end
